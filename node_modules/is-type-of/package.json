{
  "_args": [
    [
      {
        "raw": "is-type-of@^1.0.0",
        "scope": null,
        "escapedName": "is-type-of",
        "name": "is-type-of",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/wywzxxz/workspace/koa-session-example/node_modules/koa-session"
    ]
  ],
  "_from": "is-type-of@>=1.0.0 <2.0.0",
  "_id": "is-type-of@1.2.0",
  "_inCache": true,
  "_location": "/is-type-of",
  "_nodeVersion": "8.2.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/is-type-of-1.2.0.tgz_1502351263559_0.7863484714180231"
  },
  "_npmUser": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "is-type-of@^1.0.0",
    "scope": null,
    "escapedName": "is-type-of",
    "name": "is-type-of",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/koa-session"
  ],
  "_resolved": "https://registry.npmjs.org/is-type-of/-/is-type-of-1.2.0.tgz",
  "_shasum": "b553cbb4621adf5b4171e8883f370e7a6ec38995",
  "_shrinkwrap": null,
  "_spec": "is-type-of@^1.0.0",
  "_where": "/home/wywzxxz/workspace/koa-session-example/node_modules/koa-session",
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "bugs": {
    "url": "https://github.com/node-modules/is-type-of/issues"
  },
  "dependencies": {
    "core-util-is": "^1.0.2",
    "is-class": "~0.0.4",
    "isstream": "~0.1.2"
  },
  "description": "complete type checking for node",
  "devDependencies": {
    "autod": "^2.9.0",
    "beautify-benchmark": "^0.2.4",
    "benchmark": "^2.1.4",
    "contributors": "*",
    "long": "^3.2.0",
    "mocha": "^3.5.0",
    "nyc": "^11.1.0",
    "semver": "^5.4.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-10ezBXuEDp3Fp/jPCaVd4hSrAEj2lPyr1LT7+cWi9HCLd15wbh9X8dJfTDB+ZgkZSCGTG2TF6f61ugI5mSlhDA==",
    "shasum": "b553cbb4621adf5b4171e8883f370e7a6ec38995",
    "tarball": "https://registry.npmjs.org/is-type-of/-/is-type-of-1.2.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "4f80381215947b48488dfe24d187211d67ae8d45",
  "homepage": "https://github.com/node-modules/is-type-of",
  "keywords": [
    "typeof",
    "checker",
    "type",
    "is"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    },
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    }
  ],
  "name": "is-type-of",
  "optionalDependencies": {},
  "readme": "is-type-of\n==========\n\ncomplete type checking for node, extend [core-util-is](https://github.com/isaacs/core-util-is)\n\ndependencies:\n\n- [core-util-is](https://github.com/isaacs/core-util-is)\n- [is-stream](https://github.com/rvagg/isstream)\n- [is-class](https://github.com/miguelmota/is-class)\n\n## Install\n\n```\nnpm install is-type-of\n```\n\n## Example\n\n```\nvar is = require('is-type-of');\n\nis.array([1]); // => true\nis.primitive(true); // => true\nis.primitive({}); // => false\nis.generatorFunction(function * () {}); // => true\nis.long(Math.pow(2, 33)); // => true\nis.double(0); // => false\n```\n\n## API\n\n### From [core-util-is](https://github.com/isaacs/core-util-is)\n\n#### is.array(arr)\n\n#### is.boolean(bool)\n\n#### is.null(null)\n\n#### is.nullOrUndefined(null)\n\n#### is.number(num)\n\n#### is.string(str)\n\n#### is.symbol(sym)\n\n#### is.undefined(undef)\n\n#### is.regExp(reg)\n\n#### is.object(obj)\n\n#### is.date(date)\n\n#### is.error(err)\n\n#### is.function(fn)\n\n#### is.primitive(prim)\n\n#### is.buffer(buf)\n\n### from [is-stream](https://github.com/rvagg/isstream)\n\n#### is.stream(stream)\n\n#### is.readableStream(readable)\n\n#### is.writableStream(writable)\n\n#### is.duplexStream(duplex)\n\n### from [is-class](https://github.com/miguelmota/is-class)\n\n#### is.class(obj)\n\n### Extend API\n\n#### is.finite(num)\n\n#### is.NaN(NaN)\n\n#### is.generator(gen)\n\n#### is.generatorFunction(fn)\n\n#### is.promise(fn)\n\n#### is.int(int)\n\n#### is.double(double)\n\n#### is.int32(int)\n\n#### is.long(long)\n\n#### is.Long(Long)\n\n  * Support [Long](https://github.com/dcodeIO/Long.js) instance.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/is-type-of.git"
  },
  "scripts": {
    "test": "nyc mocha test/*.test.js"
  },
  "version": "1.2.0"
}
